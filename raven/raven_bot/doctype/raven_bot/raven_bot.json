{
 "actions": [],
 "allow_rename": 1,
 "autoname": "field:bot_name",
 "beta": 1,
 "creation": "2024-03-29 20:25:13.529714",
 "default_view": "List",
 "doctype": "DocType",
 "editable_grid": 1,
 "engine": "InnoDB",
 "field_order": [
  "bot_name",
  "image",
  "raven_user",
  "column_break_lhoo",
  "description",
  "is_standard",
  "module",
  "ai_tab",
  "is_ai_bot",
  "debug_mode",
  "ai_section",
  "model_provider",
  "model_name",
  "openai_assistant_id",
  "enable_code_interpreter",
  "column_break_khmi",
  "allow_bot_to_write_documents",
  "enable_file_search",
  "vector_store_ids",
  "enable_local_rag",
  "local_rag_provider",
  "use_local_embeddings",
  "embeddings_model",
  "use_llm_enhanced",
  "section_break_lwkx",
  "instruction",
  "dynamic_instructions",
  "agent_settings",
  "bot_functions"
 ],
 "fields": [
  {
   "default": "1",
   "depends_on": "eval: doc.enable_file_search && doc.enable_local_rag",
   "description": "Use LLM-based query enhancement for language-agnostic search. Works with any configured LLM provider.",
   "fieldname": "use_llm_enhanced",
   "fieldtype": "Check",
   "label": "Use LLM for Query Enhancement"
  },
  {
   "fieldname": "description",
   "fieldtype": "Small Text",
   "label": "Description"
  },
  {
   "fieldname": "image",
   "fieldtype": "Attach Image",
   "label": "Image"
  },
  {
   "fieldname": "bot_name",
   "fieldtype": "Data",
   "in_list_view": 1,
   "in_standard_filter": 1,
   "label": "Bot Name",
   "reqd": 1,
   "unique": 1
  },
  {
   "default": "0",
   "fieldname": "is_standard",
   "fieldtype": "Check",
   "hidden": 1,
   "label": "Is Standard"
  },
  {
   "fieldname": "module",
   "fieldtype": "Link",
   "hidden": 1,
   "label": "Module",
   "mandatory_depends_on": "eval: doc.is_standard == 1",
   "options": "Module Def"
  },
  {
   "fieldname": "raven_user",
   "fieldtype": "Link",
   "in_standard_filter": 1,
   "label": "Raven User",
   "options": "Raven User",
   "read_only": 1,
   "set_only_once": 1
  },
  {
   "fieldname": "column_break_lhoo",
   "fieldtype": "Column Break"
  },
  {
   "depends_on": "eval: doc.is_ai_bot",
   "fieldname": "ai_section",
   "fieldtype": "Section Break"
  },
  {
   "default": "0",
   "fieldname": "is_ai_bot",
   "fieldtype": "Check",
   "label": "Is AI Bot?"
  },
  {
   "default": "OpenAI",
   "depends_on": "eval: doc.is_ai_bot",
   "description": "Select the model provider for this bot",
   "fieldname": "model_provider",
   "fieldtype": "Select",
   "label": "Model Provider",
   "options": "OpenAI\nLocalLLM"
  },
  {
   "default": "gpt-4o",
   "depends_on": "eval: doc.is_ai_bot",
   "description": "The name of the model to use",
   "fieldname": "model_name",
   "fieldtype": "Data",
   "label": "Model Name"
  },
  {
   "depends_on": "eval: false",
   "documentation_url": "https://platform.openai.com/docs/assistants/overview",
   "fieldname": "openai_assistant_id",
   "fieldtype": "Data",
   "hidden": 1,
   "label": "OpenAI Assistant ID (Legacy)"
  },
  {
   "fieldname": "column_break_khmi",
   "fieldtype": "Column Break"
  },
  {
   "default": "0",
   "fieldname": "allow_bot_to_write_documents",
   "fieldtype": "Check",
   "label": "Allow Bot to Write Documents"
  },
  {
   "fieldname": "ai_tab",
   "fieldtype": "Tab Break",
   "label": "AI"
  },
  {
   "fieldname": "section_break_lwkx",
   "fieldtype": "Section Break"
  },
  {
   "depends_on": "eval: doc.is_ai_bot;",
   "description": "You can use Jinja variables here to customize the instruction to the bot at run time if dynamic instructions are enabled.",
   "fieldname": "instruction",
   "fieldtype": "Long Text",
   "label": "Instruction"
  },
  {
   "default": "0",
   "description": "Enable this if you want the bot to be able to read PDF files and other documents.\n\nFile search enables the agent with knowledge from files that you upload, allowing it to answer questions based on document content.",
   "fieldname": "enable_file_search",
   "fieldtype": "Check",
   "label": "Enable File Search"
  },
  {
   "default": "1",
   "depends_on": "eval: doc.enable_file_search",
   "description": "When enabled (recommended), document content will be stored and searched in a local vector database instead of OpenAI's cloud storage. Local storage provides better privacy, reduced costs, and works with all model providers.",
   "fieldname": "enable_local_rag",
   "fieldtype": "Check",
   "label": "Use Local Vector Database"
  },
  {
   "default": "Chroma",
   "depends_on": "eval: doc.enable_file_search && doc.enable_local_rag",
   "description": "The vector database to use for document storage and retrieval",
   "fieldname": "local_rag_provider",
   "fieldtype": "Select",
   "label": "Vector Database",
   "options": "Chroma\nFAISS\nWeaviate"
  },
  {
   "depends_on": "eval: doc.enable_file_search && doc.model_provider === 'OpenAI' && !doc.enable_local_rag",
   "description": "Comma-separated list of OpenAI vector store IDs (vs-*). Required for document search with OpenAI.",
   "fieldname": "vector_store_ids",
   "fieldtype": "Small Text",
   "label": "OpenAI Vector Store IDs"
  },
  {
   "default": "0",
   "depends_on": "eval: doc.is_ai_bot;",
   "description": "Dynamic Instructions allow you to embed Jinja tags in your instruction to the bot. Hence the instruction would be different based on the user who is calling the bot or the data in your system. These instructions are computed every time the bot is called. Check this if you want to embed things like Employee ID, Company Name etc in your instructions dynamically",
   "fieldname": "dynamic_instructions",
   "fieldtype": "Check",
   "label": "Dynamic Instructions"
  },
  {
   "default": "{\"temperature\": 0.7, \"top_p\": 1.0}",
   "depends_on": "eval: doc.is_ai_bot",
   "description": "JSON configuration for the agent (temperature, top_p, etc.)",
   "fieldname": "agent_settings",
   "fieldtype": "Code",
   "label": "Agent Settings",
   "options": "JSON"
  },
  {
   "depends_on": "eval: doc.is_ai_bot;",
   "fieldname": "bot_functions",
   "fieldtype": "Table",
   "label": "Bot Functions",
   "options": "Raven Bot Functions"
  },
  {
   "default": "0",
   "description": "Enable this if you want the bot to be able to process data files and execute code to analyze them.\n\nCode interpreter allows the agent to run code to perform tasks such as data analysis, visualization, or calculations.",
   "fieldname": "enable_code_interpreter",
   "fieldtype": "Check",
   "label": "Enable Code Interpreter"
  },
  {
   "default": "0",
   "description": "If enabled, stack traces of errors will be sent as messages by the bot ",
   "fieldname": "debug_mode",
   "fieldtype": "Check",
   "label": "Debug Mode"
  },
  {
   "default": "1",
   "depends_on": "eval: doc.enable_file_search && doc.enable_local_rag",
   "description": "Use local embedding models instead of OpenAI embeddings. This avoids the need for an OpenAI API key when using local vector databases.",
   "fieldname": "use_local_embeddings",
   "fieldtype": "Check",
   "label": "Use Local Embeddings"
  },
  {
   "default": "all-MiniLM-L6-v2",
   "depends_on": "eval: doc.enable_file_search && doc.enable_local_rag && doc.use_local_embeddings",
   "description": "The HuggingFace embedding model to use (requires sentence-transformers package)",
   "fieldname": "embeddings_model",
   "fieldtype": "Data",
   "label": "Embeddings Model"
  }
 ],
 "image_field": "image",
 "index_web_pages_for_search": 1,
 "links": [],
 "modified": "2024-12-07 23:26:46.772229",
 "modified_by": "Administrator",
 "module": "Raven Bot",
 "name": "Raven Bot",
 "naming_rule": "By fieldname",
 "owner": "Administrator",
 "permissions": [
  {
   "create": 1,
   "delete": 1,
   "email": 1,
   "export": 1,
   "print": 1,
   "read": 1,
   "report": 1,
   "role": "System Manager",
   "share": 1,
   "write": 1
  },
  {
   "create": 1,
   "delete": 1,
   "email": 1,
   "export": 1,
   "print": 1,
   "read": 1,
   "report": 1,
   "role": "Raven Admin",
   "share": 1,
   "write": 1
  }
 ],
 "sort_field": "modified",
 "sort_order": "DESC",
 "states": []
}